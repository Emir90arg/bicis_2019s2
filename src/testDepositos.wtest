import accesorios.*
import bicis.*
import depositos.*
test "testd depositos" {

	const farolito1 = new Farolito()
	const canasto1 = new Canasto()
	canasto1.volumen(8)
	const morral1 = new MorralDeBici()
	morral1.largo(21)
	morral1.ponerOjoDeGato()
	const morral2 = new MorralDeBici()
	morral2.largo(6)
	const bici1 = new Bicicleta()
	bici1.rodado(28) 
	bici1.largo(150)
	bici1.marca("Olmo")
	bici1.accesorios([farolito1])
	const bici2 = new Bicicleta()
	bici2.rodado(26) 
	bici2.largo(110)
	bici2.marca("Legnano")
	bici2.accesorios([farolito1,canasto1,morral1])
	const bici3 = new Bicicleta()
	bici3.rodado(20) 
	bici3.largo(90)
	bici3.marca("Legnano")
	bici3.accesorios([morral2])
	const deposito1 = new Deposito()
	deposito1.coleccionDeBicis([bici1,bici2,bici3])
	const deposito2 = new Deposito()
	deposito2.coleccionDeBicis([bici1,bici2])

	assert.equals([bici1,bici2],deposito1.bicisRapidas())
	assert.equals(#{"Legnano", "Olmo"},deposito1.marcaDeBicis())
	assert.notThat(deposito1.depositoNocturno())
	assert.that(deposito2.depositoNocturno())		
	assert.that(deposito1.algunaBiciPuedeLlevar(10))
	assert.notThat(deposito1.algunaBiciPuedeLlevar(50))
	assert.equals("Olmo",deposito1.marcaDeBiciMasRapida())
	assert.equals(0,deposito1.cargaTotalDeBicisLargas())
	assert.equals([],deposito1.cantidadDeBicisSinAccesorios())
	assert.equals([],deposito1.cantidadDeBicisSinAccesorios())
	assert.equals([],deposito1.biciCompainera(bici1))
}